version: "3.3"

services:
  app:
    build: .
    container_name: app
    ports:
      - "3000:3000"
    depends_on:
      - db
    env_file: ".env"
    environment:
      DATABASE_URL: mongodb://db:27017/grocery
      SERVER_URL: https://cafeman.xyz
      NODE_ENV: production
      MESSAGE: app

  app_rep_1:
    build: .
    container_name: app_rep_1
    ports:
      - "3001:3000"
    depends_on:
      - db
    env_file: ".env"
    environment:
      DATABASE_URL: mongodb://db:27017/grocery
      SERVER_URL: https://cafeman.xyz
      NODE_ENV: production
      MESSAGE: app_rep_1

  service:
    image: quochuydev/services
    container_name: service
    ports:
      - 4000:4000
    depends_on:
      - db
    environment:
      DATABASE_URL: mongodb://db:27017/service
      SERVER_URL: https://service.cafeman.xyz
      NODE_ENV: production

  db:
    image: mongo
    container_name: db
    restart: always
    ports:
      - 27017:27017

  nginx:
    restart: always
    container_name: nginx
    build:
      context: ./nginx
    volumes:
      # Custom: admin-dashboard-store
      - /home/admin-dashboard-store/build:/build
      # Base
      - /etc/nginx/conf.d:/etc/nginx/conf.d
      # SSL
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
    ports:
      - 443:443
      - 80:80

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    restart: always
    volumes:
      - ./jenkins_home:/var/jenkins_home
